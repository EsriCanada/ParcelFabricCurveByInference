<UserControl x:Class="ParcelFabricCurveByInference.CurveByInferenceWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:l="clr-namespace:ParcelFabricCurveByInference"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:u="clr-namespace:Wpf.Util"
    Height="300" Width="600">
    <UserControl.Resources>
        <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="l:UpdateAction"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <DataTemplate x:Key="CurveListTemplate">
            <ListView ItemsSource="{Binding}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="OID" Width="50" DisplayMemberBinding="{Binding ObjectID}" />
                        <GridViewColumn Header="Orientation" Width="50" DisplayMemberBinding="{Binding Orientation}" />
                        <GridViewColumn Header="Radius" Width="75" DisplayMemberBinding="{Binding Radius}" />
                        <GridViewColumn Header="Centerpoint" Width="50" DisplayMemberBinding="{Binding CenterpointID}" />
                    </GridView>
                </ListView.View>
                <!-- Resource and Style to move context menu from GridView to GridViewItems -->
                <ListView.Resources>
                    <ContextMenu x:Key="ItemContextMenu">
                        <MenuItem Header="Flash Feature" Click="FlashRelated_Click" CommandParameter="{Binding}"></MenuItem>
                        <MenuItem Header="Zoom to Feature" Click="ZoomToRelated_Click" CommandParameter="{Binding}"></MenuItem>
                        <MenuItem Header="Pan To Feature" Click="PanToRelated_Click" CommandParameter="{Binding}"></MenuItem>
                        <MenuItem Header="Select Feature" Click="SelectRelated_Click" CommandParameter="{Binding}"></MenuItem>
                        <Separator Visibility="{Binding UpdateVisibility}"/>
                        <MenuItem Header="Upate Inferred Values" Click="UpdateValuesRelated_Click" CommandParameter="{Binding}" Visibility="{Binding UpdateVisibility}"></MenuItem>
                    </ContextMenu>
                </ListView.Resources>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}" >
                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </DataTemplate>
        <DataTemplate x:Key="LineListTemplate">
            <ListView ItemsSource="{Binding}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="OID" Width="50" DisplayMemberBinding="{Binding ObjectID}" />
                        <GridViewColumn Header="Orientation" Width="50" DisplayMemberBinding="{Binding Orientation}" />
                        <GridViewColumn Header="Angle" Width="75" DisplayMemberBinding="{Binding Angle}"/>
                    </GridView>
                </ListView.View>
                <!-- Resource and Style to move context menu from GridView to GridViewItems -->
                <ListView.Resources>
                    <ContextMenu x:Key="ItemContextMenu">
                        <MenuItem Header="Flash Feature" Click="FlashRelated_Click" CommandParameter="{Binding}"></MenuItem>
                        <MenuItem Header="Zoom to Feature" Click="ZoomToRelated_Click" CommandParameter="{Binding}"></MenuItem>
                        <MenuItem Header="Pan To Feature" Click="PanToRelated_Click" CommandParameter="{Binding}"></MenuItem>
                        <MenuItem Header="Select Feature" Click="SelectRelated_Click" CommandParameter="{Binding}"></MenuItem>
                        <Separator Visibility="{Binding UpdateVisibility}"/>
                        <MenuItem Header="Upate Inferred Values" Click="UpdateValuesRelated_Click" CommandParameter="{Binding}" Visibility="{Binding UpdateVisibility}"></MenuItem>
                    </ContextMenu>
                </ListView.Resources>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}" >
                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <DockPanel>
            <!-- Non Default Settings -->
            <StackPanel DockPanel.Dock="Top" Name="PropertiesDebug" Orientation="Vertical" Visibility="{Binding SettingVisibility}" Margin="5" Grid.IsSharedSizeScope="True">
                <TextBlock Text="None default values in use:" Background="Red"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Name"></ColumnDefinition>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Value"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="AngleToleranceTangentCompareInDegrees:" Margin="2" TextAlignment="Right"/>
                    <TextBox Grid.Column="1" Text="{Binding AngleToleranceTangentCompareInDegrees}" Margin="2" />
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Name"></ColumnDefinition>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Value"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="StraightLinesBreakLessThanInDegrees:" Margin="2" TextAlignment="Right"/>
                    <TextBox Grid.Column="1" Text="{Binding StraightLinesBreakLessThanInDegrees}" Margin="2" />
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Name"></ColumnDefinition>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Value"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="MaximumDeltaInDegrees:" Margin="2" TextAlignment="Right"/>
                    <TextBox Grid.Column="1" Text="{Binding MaximumDeltaInDegrees}" Margin="2" />
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Name"></ColumnDefinition>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Value"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="ExcludeTangentsShorterThanScaler:" Margin="2" TextAlignment="Right"/>
                    <TextBox Grid.Column="1" Text="{Binding ExcludeTangentsShorterThanScaler}" Margin="2" />
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Name"></ColumnDefinition>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Value"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="OrthogonalSearchDistance:" Margin="2" TextAlignment="Right"/>
                    <TextBox Grid.Column="1" Text="{Binding OrthogonalSearchDistance}" Margin="2" />
                </Grid>
            </StackPanel>
            <!-- Data Grid-->
            <Grid VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <TextBlock Text="{Binding Total, StringFormat=Total: {0}}" Margin="3"/>
                    <TextBlock Text="{Binding Inferred, StringFormat=Inferred: {0}}" Margin="3"/>
                </StackPanel>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ListView ItemsSource="{Binding Curves}" SelectionMode="Single" SelectedItem="{Binding SelectedItem, Mode=TwoWay}" u:GridViewSort.AutoSort="True">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="OID" Width="50" DisplayMemberBinding="{Binding ObjectID}" u:GridViewSort.PropertyName="ObjectID"/>
                                <GridViewColumn Header="Action" Width="80" u:GridViewSort.PropertyName="Action">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <ComboBox SelectedValue="{Binding Action}" ItemsSource="{Binding Source={StaticResource dataFromEnum}}" IsEnabled="{Binding CanActionChange}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Radius" Width="60" DisplayMemberBinding="{Binding InferredRadius}" u:GridViewSort.PropertyName="InferredRadius"/>
                                <GridViewColumn Header="Centerpoint" Width="70" DisplayMemberBinding="{Binding InferredCenterpointID}" u:GridViewSort.PropertyName="InferredCenterpointID"/>
                                <GridViewColumn Header="Tangents" Width="60" DisplayMemberBinding="{Binding TangentCurveCount}" u:GridViewSort.PropertyName="TangentCurveCount"/>
                                <GridViewColumn Header="Parallels" Width="50" DisplayMemberBinding="{Binding ParallelCurveCount}" u:GridViewSort.PropertyName="ParallelCurveCount"/>
                                <GridViewColumn Header="Lines" Width="50" DisplayMemberBinding="{Binding TangentLineCount}" u:GridViewSort.PropertyName="TangentLineCount"/>
                            </GridView>
                        </ListView.View>
                        <!-- Resource and Style to move context menu from GridView to GridViewItems -->
                        <ListView.Resources>
                            <ContextMenu x:Key="ItemContextMenu">
                                <MenuItem Header="Flash Feature" Click="FlashInferred_Click" CommandParameter="{Binding}"></MenuItem>
                                <MenuItem Header="Pan to Feature" Click="PanToInferred_Click" CommandParameter="{Binding}"></MenuItem>
                                <MenuItem Header="Zoom to Feature" Click="ZoomToInferred_Click" CommandParameter="{Binding}"></MenuItem>
                                <MenuItem Header="Zoom to Related Features" Click="ZoomToInferredRelated_Click" CommandParameter="{Binding}"></MenuItem>
                                <MenuItem Header="Select Related Features" Click="SelectInferredRelated_Click" CommandParameter="{Binding}"></MenuItem>
                                <Separator Visibility="{Binding SetVisibility}"/>
                                <MenuItem Header="Apply Change" Click="ApplyInferredChange_Click" CommandParameter="{Binding}" Visibility="{Binding SetVisibility}" IsEnabled="{Binding DataContext.IsEditing, RelativeSource={RelativeSource AncestorType=ListView}}"></MenuItem>
                            </ContextMenu>
                        </ListView.Resources>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}" >
                                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                    <GridSplitter Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="Black" ShowsPreview="True" Width="3"/>
                    <ScrollViewer Grid.Column="2">
                        <DockPanel DataContext="{Binding SelectedItem}">
                            <StackPanel DockPanel.Dock="Top">
                                <TextBlock DockPanel.Dock="Top" Text="{Binding ObjectID, StringFormat=ObjectID: {0}}" FontSize="14" FontWeight="Bold"/>
                                <TextBlock DockPanel.Dock="Top" Text="{Binding InferredRadius, StringFormat=Radius: {0}}" Visibility="{Binding SetVisibility}"/>
                                <TextBlock DockPanel.Dock="Top" Text="{Binding InferredCenterpointID, StringFormat=CenterpointID: {0}}" Visibility="{Binding SetVisibility}"/>
                            </StackPanel>
                            <WrapPanel>
                                <Expander Header="Tangent Curves" Visibility="{Binding TangentVisibility, FallbackValue=Collapsed}" Margin="3">
                                    <ContentPresenter Content="{Binding TangentCurves}" ContentTemplate="{StaticResource CurveListTemplate}" />
                                </Expander>
                                <Expander Header="Parallel Curves" Visibility="{Binding ParallelVisibility, FallbackValue=Collapsed}" Margin="3">
                                    <ContentPresenter Content="{Binding ParallelCurves}" ContentTemplate="{StaticResource CurveListTemplate}" />
                                </Expander>
                                <Expander Header="Tangent Lines" Visibility="{Binding TangentLineVisibility, FallbackValue=Collapsed}" Margin="3">
                                    <ContentPresenter Content="{Binding TangentLines}" ContentTemplate="{StaticResource LineListTemplate}" />
                                </Expander>
                            </WrapPanel>
                        </DockPanel>
                    </ScrollViewer>
                </Grid>
                <DockPanel Grid.Row="2">
                    <Button Margin="2" Width="80" Click="Clear_Click" IsEnabled="{Binding Finished}" DockPanel.Dock="Left">Clear</Button>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Margin="2" Width="80" Click="Find_Click" IsEnabled="{Binding Finished}" DockPanel.Dock="Right">Find Rows</Button>
                        <Button Margin="2" Width="80" Click="Update_Click" IsEnabled="{Binding IsEditing}" DockPanel.Dock="Right">Update Rows</Button>
                    </StackPanel>
                </DockPanel>
            </Grid>
        </DockPanel>
    </Grid>
</UserControl>
